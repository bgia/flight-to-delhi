 ______  __       __   ______   __  __   ______                 
/\  ___\/\ \     /\ \ /\  ___\ /\ \_\ \ /\__  _\                
\ \  __\\ \ \____\ \ \\ \ \__ \\ \  __ \\/_/\ \/                
 \ \_\   \ \_____\\ \_\\ \_____\\ \_\ \_\  \ \_\                
  \/_/    \/_____/ \/_/ \/_____/ \/_/\/_/   \/_/                
 ______  ______       _____    ______   __       __  __   __    
/\__  _\/\  __ \     /\  __-. /\  ___\ /\ \     /\ \_\ \ /\ \   
\/_/\ \/\ \ \/\ \    \ \ \/\ \\ \  __\ \ \ \____\ \  __ \\ \ \  
   \ \_\ \ \_____\    \ \____- \ \_____\\ \_____\\ \_\ \_\\ \_\ 
    \/_/  \/_____/     \/____/  \/_____/ \/_____/ \/_/\/_/ \/_/ 
    
### Test Case ###

Maximum time available: 3 hours
There are two exercises, we recommend saving about a third of the time for the
second exercise. Have some time management in mind, perfection is not required, better 
make sure you can deliver some results. A clean and commented coding style is a plus.
Feel free to explain your reasoning by writing comments in the code.
An efficiency-oriented code is also highly appreciated. 
You can code in any programming language, with the following preference rank on our side:
1. R or Python
2. MATLAB or Octave
3. Any other scripting language (Julia, ...)
4. Any other common language
Once you are done, send your code and data in a zipped folder 'first-name_last-name' to bgia@swiss.com,
with subfolders for the 2 tasks. The email time stamp counts as your finishing time.

##########################################
### Exercise 1:                          #
##########################################

# Description:
	The goal of this exercise is to derive a model predicting demand for a given 
	route in an airline's network. You are provided with a data file 'data.csv', 
	which will form the basis of your analysis. It includes data for the 
	connection Zurich-Delhi. Note, that a flight is sold for a certain amount of 
	time, i.e., every selling day before the flight departs, you can get 
	bookings in. As such, each observation in the dataset is a selling day for a 
	specific flight (identified by departure time and departure date), i.e.,
	a single flight has multiple observations in the data set as it is sold over multiple days.
	
	
# Tasks:
	1.	Perform some data cleansing to bring it into a more usable state. 
		Mind in particular potential errors in the data.
	2.	Identify relevant drivers of demand.
	3. 	Derive a suitable prediction model.
			
	The data set contains flights within a 2 years departure date range. You can divide it in training and testing subsets,
	the way you see fitting best. Keep in mind that your model's performance will be evaluated on a test set (not provided)
	containing flights departing after the last departure date of the provided dataset. 
	
	
# Remarks and hints:
	-	Definition of data-columns:
		•	direction – flight direction
		•	point_of_origin – start of passenger journey (country code)
		•	dep_date – departure date of flight
		•	selling_date – date when passenger purchased the ticket
		•	dep_time – departure time (local time)
		•	cost – average cost for sold tickets
		•	margin – airlines margin on sold tickets
		•	bookings – counts the number of sold tickets
		
	- Hints:
		•	There are no other price components than the one given (no taxes or so). 
			Values are in local currency (according to point_of_origin).
		• 	The point_of_origin is a proxy for the home country of a passenger, so 
			where he is originally from. As such, on a given flight, passengers with 
			various point_of_origin can be found.

	- Data:
		•	Separated by “,”
		•	Decimal points as “.”


##########################################
### Exercise 2:                          #
##########################################

# Description
The Economy Class cabin in our B777 has three categories of seats: Standard (ST), Preferred Zone (PZ) and Extra Legroom (EL).
The prices normally charged for reserving one of those seats, are respectively 39, 61, 110 €, to be paid on top of the travel fare. As a reference, last year we sold at those prices the following amount of seat reservations:
-	2'000'000 ST
-	  800'000 PZ
-	  500'000 EL

To study the price sensitivity of our customers for this ancillary product, and then find the optimal price, we decide to change daily, starting from 
2024-03-01 and for a whole year, the prices of the seat reservation and observe how demand for this ancillary product changes accordingly. For technical limitations, we can only have one price per selling day per seat category, that will be offered to all the customers requesting this ancillary product on that day. 
For example, we cannot differentiate per route, number of passengers on the reservation, or any other feature specific to the single booking at hand.
The goal is to learn an optimal pricing policy for this product, that differentiates as much as possible, along the relevant dimensions, the offered price.
You are now asked to help designing the experiment and to generate the exploration sequence of prices.

# Tasks
1. Identify and discuss the factors influencing the price sensitivity for this ancillary product.
2. Discuss what properties, also in relation to the previous point, the exploration price sequence needs to have to maximize our chances to learn from the 	experiment a differentiated pricing policy for this ancillary product.
3. Implement an algorithm to generate the random price sequence. Export the result in a .csv file having as columns DATE, PRICE_ST, PRICE_PZ, PRICE_EL, and as rows the date (YYYY-MM-DD) and the prices (integer) for the 3 seat categories for each of the days of the test.
4. Plot a “test calendar” for the human analysts to have a compact overview of the test (choose your own clear presentation style).
5. Discuss and estimate roughly the expected cost of the testing. You can assume an exponential Price-Demand relation. 

# Constraints
-	The exploration range for each of the seat type should be between 0.5 and 1.5 of each of the current prices (rounded).
-	The prices to be charged can only be integers (i.e. max price resolution = 1€).
-	To maintain coherency of our offer, on each test day the upsell between the three seat types can be reduced up to a minimum of 25% of the current 	ones. For example, the difference between ST and PZ must be throughout the test and each day, greater or equal than 0.25*(61-39) = 5.5€.

The sequence should be as random as possible across all the relevant dimensions, but still comply with those rules.

# Evaluation
-	Your sequence will be passed to a demand simulator, providing for each simulated customer the purchase result (no seat reservation, ST, PZ, EL).
-	This simulated dataset will be passed to a regression algorithm. 
-	The identified model parameters will be compared to the simulator ones: the better the test sequence is designed, the lower the estimation error 	will be.



Good luck and have fun!
Giacomo

	                    |
			    |
			    |
		          .-'-.
			 ' ___ '
	       ---------'  .-.  '---------
________________________'  '-'  '_________________________
''''''-|---|--/    \==][^',_m_,'^][==/    \--|---|-''''''
	      \    /  ||/   H   \||  \    /
	       '--'   OO   O|O   OO   '--'
